GIT : is an open source version control system tool

  SVN, Mercurial etc

Git Hub : A cloud based platform where we can store, share and work with others
          Platform for integration of resources with the Git.
          Founded in the year 2008

alternate to GitHub : GitLab, BitBucket, host-your-own (gogs, gittea)


Initialize a git - Local Repository
Create files/folders etc
Add the files to the staging environment
Commit the files
Push the files      --- remote repo 

Steps for git :

Create a working directory under c:/, d:/, e:/ etc (DotnetTraining etc meaningful names)

Move to the newly created directory

1. type git init (initializes a new .git folder)
2. Next login to the GitHub.com
3. Give credentials if already signed in, else sign up
4. Create a new Repository ( by clicking in the + dropdown)
     self explanatory steps to create a repo
5. Copy the new link address of the repository  (Use Https based url)
6. In the Local Repo type  git remote add <alias name> <remote address url>  
7. check if the sync is done by typing git remote -v
8. Next we can add as many files as needed
9. Then to push it to the remote repo,
    type a) git add .   (. includes all directories/subdirectories and files)
         b) git commit -m "<meaningful message>"
         c) git push <alias name> <branch name> (keep it as master )
10. Refresh the remote repo and check if the file/files are added
11. You can edit the files in the remote repo and commit it
12. For any changes made to the remote repo, that must be included in the local repo type
     git pull <alias name> <branch name>


By default, every git repositoryâ€™s first branch is named `master` (and is typically used as the primary branch in the project)

Every repository has a primary branch that can be thought of as the official version of the repository

Say you want to make some new features but are worried about making changes to the main project while developing the feature, Then this is where git branches come in. 


Branches :
git branch < branchname> - to create a new branch
git branch or git branch --list  - to show all branches 
git checkout <branchname>  - to switch between branches
git branch -d <branchname> - to delete a branch
git merge <branchname>  - to merge changes
